generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model EventSchedule {
  id              Int             @id @default(autoincrement())
  dayNumber       Int
  version         Int
  isRainySchedule Boolean
  scheduleDate    DateTime
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  scheduleImages  ScheduleImage[]
}

model ScheduleImage {
  id              Int           @id @default(autoincrement())
  dayNumber       Int
  description     String
  startTime       String // hh:mm形式
  endTime         String // hh:mm形式
  fileName        String // スケジュールのファイル名を格納するフィールド
  eventScheduleId Int
  eventSchedule   EventSchedule @relation(fields: [eventScheduleId], references: [id])
}

model Team {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  scores    Score[]
}

model Event {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  matches     Match[]
  scores      Score[]
  rankings    Json // 順位を保持するフィールド
}

model Match {
  id           Int      @id @default(autoincrement())
  eventId      Int
  team1Id      Int?
  team2Id      Int?
  matchDate    DateTime
  startTime    String // hh:mm形式
  endTime      String // hh:mm形式
  winnerTeamId Int?
  loserTeamId  Int?
  team1Note    String? // チーム1に関する注釈
  team2Note    String? // チーム2に関する注釈
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  event Event @relation(fields: [eventId], references: [id])
}

model Score {
  id        Int      @id @default(autoincrement())
  eventId   Int
  teamId    Int
  score     Int
  note      String   @default("")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  event Event @relation(fields: [eventId], references: [id])
  team  Team  @relation(fields: [teamId], references: [id])
}
